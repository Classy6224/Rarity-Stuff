local library = loadstring(game:HttpGet('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3'))()

local w = library:CreateWindow("CLASSY#6224 EATS A$$") -- Creates the window

local b = w:CreateFolder("Click here please xx") -- Creates the folder (You will put your buttons, etc., here)

b:Label("Classy#6224 MADE THIS SHIT", {
    TextSize = 14,
    TextColor = Color3.fromRGB(8, 146, 208),
    BgColor = Color3.fromRGB(69, 69, 69)
})

local toggles = {}

local function PerformAction(actionFunction, delay)
    while toggles[actionFunction] do
        actionFunction()
        wait(delay) -- Adjust the wait time as needed
    end
end

local function ToggleAction(name, actionFunction, delay)
    toggles[actionFunction] = false
    b:Toggle("Toggle " .. name, function(value)
        toggles[actionFunction] = value
        if value then
            spawn(function()
                while toggles[actionFunction] do
                    PerformAction(actionFunction, delay)
                    wait(1) -- Avoids running the loop too quickly
                end
            end)
        end
    end)
end

ToggleAction("ROLL", function()
    game:GetService("ReplicatedStorage").Remotes.Open_S:FireServer()
end, 1) -- Set the delay for "ROLL" toggle to 1 second

ToggleAction("REBIRTH", function()
    game:GetService("ReplicatedStorage").Remotes.Rebirth.PurchaseRebirth:FireServer()
end, 17) -- Set the delay for "REBIRTH" toggle to 17 seconds

ToggleAction("ASS SEND", function()
    game:GetService("ReplicatedStorage").Remotes.Ascend.PurchaseAscension:FireServer()
end, 1) -- Set the delay for "ASS SEND" toggle to 1 second

ToggleAction("TRAILS PLEASE X5", function()
    game:GetService("ReplicatedStorage").Remotes.Buy_TraitReroll:FireServer(2)
end, 6) -- Set the delay for "TRAILS PLEASE X5" toggle to 10 seconds

ToggleAction("OPEN ASS EGGS", function()
    game:GetService("ReplicatedStorage").Remotes.Open_Crate:FireServer("Dev Crate", 6)
end, .1) -- Set the delay for "OPEN ASS EGGS" toggle to 1 second

while wait(1) do
    library:Render()
end
